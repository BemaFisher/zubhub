version: "3.9"

services:
  web:
    image: unstructuredstudio/zubhub-services_web:latest
    deploy:
      replicas: 2
      # update_config:
      #   parallelism: 2
      #   delay: 10s
      restart_policy:
        condition: on-failure
      placement:
        max_replicas_per_node: 1
    environment:
      - SECRET_NAME=zubhub_services_secrets
      # - ENVIRONMENT=${ENVIRONMENT}
      # - SECRET_KEY=${SECRET_KEY}
      # - DEBUG=${DEBUG}
      # - POSTGRES_NAME=${POSTGRES_NAME}
      # - POSTGRES_USER=${POSTGRES_USER}
      # - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      # - POSTGRES_HOST=${POSTGRES_HOST}
      # - SENDGRID_API_KEY=${SENDGRID_API_KEY}
      # - DEFAULT_FROM_PHONE=${DEFAULT_FROM_PHONE}
      # - TWILIO_ACCOUNT_SID=${TWILIO_ACCOUNT_SID}
      # - TWILIO_AUTH_TOKEN=${TWILIO_AUTH_TOKEN}
      # - TWILIO_NOTIFY_SERVICE_SID=${TWILIO_NOTIFY_SERVICE_SID}

      # - DEFAULT_FRONTEND_DOMAIN=${DEFAULT_FRONTEND_DOMAIN}
      # - DEFAULT_BACKEND_DOMAIN=${DEFAULT_BACKEND_DOMAIN}
      # - DEFAULT_DISPLAY_NAME=${DEFAULT_DISPLAY_NAME}
      # - DEFAULT_FRONTEND_PROTOCOL=${DEFAULT_FRONTEND_PROTOCOL}
      # - DEFAULT_BACKEND_PROTOCOL=${DEFAULT_BACKEND_PROTOCOL}

      # - AKISMET_API_KEY=${AKISMET_API_KEY}

      # - DOSPACE_ACCESS_KEY_ID=${DOSPACE_ACCESS_KEY_ID}
      # - DOSPACE_ACCESS_SECRET_KEY=${DOSPACE_ACCESS_SECRET_KEY}
      # - DOSPACE_REGION=${DOSPACE_REGION}
      # - DOSPACE_ENDPOINT_URL=${DOSPACE_ENDPOINT_URL}
      # - DOSPACE_BUCKETNAME=${DOSPACE_BUCKETNAME}

      # - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      # - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}

      # - CELERY_BROKER=${CELERY_BROKER}
      # - CELERY_BACKEND=${CELERY_BACKEND}

      # - CELERY_FLOWER_USER=${CELERY_FLOWER_USER}
      # - CELERY_FLOWER_PASSWORD=${CELERY_FLOWER_PASSWORD}

      # - PROXY_COUNT=${PROXY_COUNT}
      # - DETECT_MISCONFIG=${DETECT_MISCONFIG}
    secrets:
      - zubhub_services_secrets
    ports:
      - 8000:8000
    depends_on:
      - rabbitmq

  rabbitmq:
    image: rabbitmq:3-management
    env_file: .env
    deploy:
      replicas: 1
      # update_config:
      #   parallelism: 2
      #   delay: 10s
      restart_policy:
        condition: on-failure
      placement:
        max_replicas_per_node: 1
        constraints:
          - "node.role==manager"
    ports:
      - 5672:5672
      - 15672:15672

  reverse-proxy:
    image: valian/docker-nginx-auto-ssl:1.0.0
    deploy:
      replicas: 1
      # update_config:
      #   parallelism: 2
      #   delay: 10s
      restart_policy:
        condition: on-failure
      placement:
        max_replicas_per_node: 1
        constraints:
          - "node.role==manager"
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./.ssl-data:/etc/resty-auto-ssl
    environment:
      ALLOWED_DOMAINS: "(api|www.api|rabbitmq|prometheus).zubhub.unstructured.studio"
      SITES:
        "api.zubhub.unstructured.studio=web:8000;www.api.zubhub.unstructured.studio=web:8000;\
        rabbitmq.zubhub.unstructured.studio=rabbitmq:15672;prometheus.zubhub.unstructured.studio=prometheus:9090"
      FORCE_HTTPS: "true"
    depends_on:
      - web
      - rabbitmq
      # - flower
      - prometheus

  celery_worker:
    image: unstructuredstudio/zubhub-services_celery:latest
    environment:
      - SECRET_NAME=zubhub_services_secrets
      # - ENVIRONMENT=${ENVIRONMENT}
      # - SECRET_KEY=${SECRET_KEY}
      # - DEBUG=${DEBUG}
      # - POSTGRES_NAME=${POSTGRES_NAME}
      # - POSTGRES_USER=${POSTGRES_USER}
      # - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      # - POSTGRES_HOST=${POSTGRES_HOST}
      # - SENDGRID_API_KEY=${SENDGRID_API_KEY}
      # - DEFAULT_FROM_PHONE=${DEFAULT_FROM_PHONE}
      # - TWILIO_ACCOUNT_SID=${TWILIO_ACCOUNT_SID}
      # - TWILIO_AUTH_TOKEN=${TWILIO_AUTH_TOKEN}
      # - TWILIO_NOTIFY_SERVICE_SID=${TWILIO_NOTIFY_SERVICE_SID}

      # - DEFAULT_FRONTEND_DOMAIN=${DEFAULT_FRONTEND_DOMAIN}
      # - DEFAULT_BACKEND_DOMAIN=${DEFAULT_BACKEND_DOMAIN}
      # - DEFAULT_DISPLAY_NAME=${DEFAULT_DISPLAY_NAME}
      # - DEFAULT_FRONTEND_PROTOCOL=${DEFAULT_FRONTEND_PROTOCOL}
      # - DEFAULT_BACKEND_PROTOCOL=${DEFAULT_BACKEND_PROTOCOL}

      # - AKISMET_API_KEY=${AKISMET_API_KEY}

      # - DOSPACE_ACCESS_KEY_ID=${DOSPACE_ACCESS_KEY_ID}
      # - DOSPACE_ACCESS_SECRET_KEY=${DOSPACE_ACCESS_SECRET_KEY}
      # - DOSPACE_REGION=${DOSPACE_REGION}
      # - DOSPACE_ENDPOINT_URL=${DOSPACE_ENDPOINT_URL}
      # - DOSPACE_BUCKETNAME=${DOSPACE_BUCKETNAME}

      # - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      # - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}

      # - CELERY_BROKER=${CELERY_BROKER}
      # - CELERY_BACKEND=${CELERY_BACKEND}

      # - CELERY_FLOWER_USER=${CELERY_FLOWER_USER}
      # - CELERY_FLOWER_PASSWORD=${CELERY_FLOWER_PASSWORD}

      # - PROXY_COUNT=${PROXY_COUNT}
      # - DETECT_MISCONFIG=${DETECT_MISCONFIG}
    secrets:
      - zubhub_services_secrets
    deploy:
      replicas: 1
      # update_config:
      #   parallelism: 2
      #   delay: 10s
      restart_policy:
        condition: on-failure
      placement:
        max_replicas_per_node: 1
        constraints:
          - "node.role==manager"
    depends_on:
      - rabbitmq

  # flower:
  #   env_file: .env
  #   build:
  #     context: .
  #     dockerfile: ./compose/flower/Dockerfile
  #   ports:
  #     - 5555
  #   command: /flower/start-flower
  #   restart: on-failure
  #   volumes:
  #     - ./zubhub:/zubhub
  #     - ./compose/flower/start-flower:/start-flower:ro
  #     - ./compose/flower/requirements.txt:/requirements.txt:ro
  #   depends_on:
  #     - celery_worker
  #     - rabbitmq

  prometheus:
    image: prom/prometheus
    ports:
      - 9090:9090
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    deploy:
      replicas: 1
      # update_config:
      #   parallelism: 2
      #   delay: 10s
      restart_policy:
        condition: on-failure
      placement:
        max_replicas_per_node: 1
        constraints:
          - "node.role==manager"
    volumes:
      - ./compose/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    # depends_on:
    #   - cadvisor

  # cadvisor:
  #   image: google/cadvisor
  #   restart: on-failure
  #   volumes:
  #     - /:/rootfs:ro
  #     - /var/run:/var/run:rw
  #     - /sys:/sys:ro
  #     - /var/lib/docker/:/var/lib/docker:ro

secrets:
  zubhub_services_secrets:
    file: .env

volumes:
  .ssl-data:
